## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
back_end/.vs/
back_end/*.rsuser
back_end/*.suo
back_end/*.user
back_end/*.userosscache
back_end/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
back_end/*.userprefs

# Mono auto generated files
back_end/mono_crash.*

# Build results
back_end/[Dd]ebug/
back_end/[Dd]ebugPublic/
back_end/[Rr]elease/
back_end/[Rr]eleases/
back_end/x64/
back_end/x86/
back_end/[Ww][Ii][Nn]32/
back_end/[Aa][Rr][Mm]/
back_end/[Aa][Rr][Mm]64/
back_end/bld/
back_end/[Bb]in/
back_end/[Oo]bj/
back_end/[Ll]og/
back_end/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
back_end/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
back_end/Generated\ Files/

# MSTest test Results
back_end/[Tt]est[Rr]esult*/
back_end/[Bb]uild[Ll]og.*

# NUnit
back_end/*.VisualState.xml
back_end/TestResult.xml
back_end/nunit-*.xml

# Build Results of an ATL Project
back_end/[Dd]ebugPS/
back_end/[Rr]eleasePS/
back_end/dlldata.c

# Benchmark Results
back_end/BenchmarkDotNet.Artifacts/

# .NET Core
back_end/project.lock.json
back_end/project.fragment.lock.json
back_end/artifacts/

# ASP.NET Scaffolding
back_end/ScaffoldingReadMe.txt

# StyleCop
back_end/StyleCopReport.xml

# Files built by Visual Studio
back_end/*_i.c
back_end/*_p.c
back_end/*_h.h
back_end/*.ilk
back_end/*.meta
back_end/*.obj
back_end/*.iobj
back_end/*.pch
back_end/*.pdb
back_end/*.ipdb
back_end/*.pgc
back_end/*.pgd
back_end/*.rsp
back_end/*.sbr
back_end/*.tlb
back_end/*.tli
back_end/*.tlh
back_end/*.tmp
back_end/*.tmp_proj
back_end/*_wpftmp.csproj
back_end/*.log
back_end/*.vspscc
back_end/*.vssscc
back_end/.builds
back_end/*.pidb
back_end/*.svclog
back_end/*.scc

# Chutzpah Test files
back_end/_Chutzpah*

# Visual C++ cache files
back_end/ipch/
back_end/*.aps
back_end/*.ncb
back_end/*.opendb
back_end/*.opensdf
back_end/*.sdf
back_end/*.cachefile
back_end/*.VC.db
back_end/*.VC.VC.opendb

# Visual Studio profiler
back_end/*.psess
back_end/*.vsp
back_end/*.vspx
back_end/*.sap

# Visual Studio Trace Files
back_end/*.e2e

# TFS 2012 Local Workspace
back_end/$tf/

# Guidance Automation Toolkit
back_end/*.gpState

# ReSharper is a .NET coding add-in
back_end/_ReSharper*/
back_end/*.[Rr]e[Ss]harper
back_end/*.DotSettings.user

# TeamCity is a build add-in
back_end/_TeamCity*

# DotCover is a Code Coverage Tool
back_end/*.dotCover

# AxoCover is a Code Coverage Tool
back_end/.axoCover/*
back_end/!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
back_end/coverage*.json
back_end/coverage*.xml
back_end/coverage*.info

# Visual Studio code coverage results
back_end/*.coverage
back_end/*.coveragexml

# NCrunch
back_end/_NCrunch_*
back_end/.*crunch*.local.xml
back_end/nCrunchTemp_*

# MightyMoose
back_end/*.mm.*
back_end/AutoTest.Net/

# Web workbench (sass)
back_end/.sass-cache/

# Installshield output folder
back_end/[Ee]xpress/

# DocProject is a documentation generator add-in
back_end/DocProject/buildhelp/
back_end/DocProject/Help/*.HxT
back_end/DocProject/Help/*.HxC
back_end/DocProject/Help/*.hhc
back_end/DocProject/Help/*.hhk
back_end/DocProject/Help/*.hhp
back_end/DocProject/Help/Html2
back_end/DocProject/Help/html

# Click-Once directory
back_end/publish/

# Publish Web Output
back_end/*.[Pp]ublish.xml
back_end/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
back_end/*.pubxml
back_end/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
back_end/*.nupkg
# NuGet Symbol Packages
back_end/*.snupkg
# The packages folder can be ignored because of Package Restore
back_end/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
back_end/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
back_end/*.nuget.props
back_end/*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
back_end/*.[Cc]ache
# but keep track of directories ending in .cache
back_end/!?*.[Cc]ache/

# Others
back_end/ClientBin/
back_end/~$*
back_end/*~
back_end/*.dbmdl
back_end/*.dbproj.schemaview
back_end/*.jfm
back_end/*.pfx
back_end/*.publishsettings
back_end/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
back_end/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
back_end/Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
back_end/*.mdf
back_end/*.ldf
back_end/*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
back_end/FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
back_end/*.plg

# Visual Studio 6 workspace options file
back_end/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

back_end/obj/

back_end/bin/Debug/netcoreapp3.1/
